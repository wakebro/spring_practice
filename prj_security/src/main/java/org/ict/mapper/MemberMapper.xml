<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ict.mapper.MemberMapper">

	<resultMap type="org.ict.domain.MemberVO" id="memberMap">
	<!-- 조인 등으로 기존 VO와 구조가 다른 데이터가 리턴되는 경우
	resultMap으로 묶는다. PRIMARY KEY에 해당되는 것은 id 태그에 넣고,
	result의 property에는 VO의 변수명, column은 DB상의 컬럼명을 넣는다.
	이러면 VO의 변수명과 DB상의 컬럼명이 달라도 매칭이 된다.-->
	
		<!-- Primary key 해당되는 값 저장 
		JOIN구문 실행의 매칭 기준 컬럼을 id태그에 먼저 설정한다.-->
		<id property="userid" column="userid"/>
		<!-- DB상의 데이터를 VO에 저장 -->
		<result property="userid" column="userid"/>
		<result property="userpw" column="userpw"/>
		<result property="userName" column="username"/>
		<result property="enabled" column="enabled"/>
		<result property="regDate" column="regdate"/>
		<result property="updateDate" column="updatedate"/>
		<!-- 클래스 내부에 List<자료형>을 멤버변수로 가지면
		아래와 같이 collection태그로 설정한다. -->
		<collection property="authList" resultMap="authMap"/>
	</resultMap>
	
	<!-- collection 내부의 resultMap에 들어간 authMap 설정 -->
	<resultMap type="org.ict.domain.AuthVO" id="authMap">
		<!-- AuthVO 내부에 있던 멤버변수를 여기에 저장 -->
		<result property="userid" column="userid"/>
		<result property="auth" column="auth"/>
	</resultMap>

	<select id="read" resultMap="memberMap">
		SELECT member_tbl.*, member_auth.auth 
		FROM member_tbl LEFT OUTER JOIN member_auth
		ON member_tbl.userid = member_auth.userid
		WHERE member_tbl.userid=#{userid}
	</select>
	
	<insert id="insert">
		INSERT INTO member_tbl(userid, userpw, username)
		VALUES (#{vo.userid}, #{vo.userpw}, #{vo.username})
		
		INSERT INTO member_auth(userid, auth)
		VALUES (#{vo.userid}, #{auth})		
	</insert>
</mapper>